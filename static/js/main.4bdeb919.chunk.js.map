{"version":3,"sources":["components/ListItemInfo.jsx","components/ListItem.jsx","contexts/ListContext.jsx","components/List.jsx","components/SearchForm.jsx","components/Header.jsx","components/ErrorMessage.jsx","components/LoadingMessage.jsx","pages/SwapiPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ItemInfoStyled","styled","div","ListItemInfo","gender","skinColor","height","hair","ListItemStyled","ListItem","item","useState","displayInfo","setDisplayInfo","onClick","name","skin_color","hair_color","ListContext","createContext","ListStyled","List","searchList","useContext","map","index","FormStyled","form","SearchForm","list","searchInput","setSearchInput","setSearchList","onSubmit","e","preventDefault","searchString","filteredList","filter","includes","filterList","value","placeholder","onChange","target","HeaderStyled","Header","className","href","ErrorMessage","LoadingMessage","SwapiPage","isError","App","setList","setIsError","useEffect","getCharacters","a","characters","page","next","url","fetch","then","response","json","data","results","forEach","push","ListContextValue","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bdeb919.chunk.js","sourcesContent":["import React from 'react'\nimport styled from \"styled-components\";\n\nconst ItemInfoStyled = styled.div`\n\np {\n    margin: 0;\n}\n\n`;\n\nexport default function ListItemInfo({gender, skinColor, height, hair}) {\n    \n    return (\n        <ItemInfoStyled>\n            <p><b>Gender:</b> {gender}</p>\n            <p><b>Height:</b> {height}</p>\n            <p><b>Skin color: </b> {skinColor}</p>\n            <p><b>Hair color:</b> {hair}</p>\n        </ItemInfoStyled>\n    )\n}\n","import React, {useState} from 'react'\nimport ListItemInfo from './ListItemInfo';\nimport styled from \"styled-components\";\n\nconst ListItemStyled = styled.div`\n  border-top: 3px solid #583c98;\n  border-left: 3px solid #fff;\n  border-right: 3px solid #fff;\n  border-bottom: 3px solid #fff;\n  padding: 1rem;\n  margin: 1rem;\n  border-radius: 5px;\n  background-color: #fff;\n  &:hover {\n    border: 3px solid #583c98;\n    transition: 0.5s all ease;\n    cursor: pointer;\n  }\n`;\n\nexport default function ListItem({item}) {\n\n    const [displayInfo, setDisplayInfo] = useState(false);\n\n    const handleOnCLick = () =>{\n       displayInfo ? setDisplayInfo(false) : setDisplayInfo(true);\n    } \n   \n    return (\n        <ListItemStyled onClick={handleOnCLick}>\n            <h5>{item.name}</h5>\n            {displayInfo && \n            <ListItemInfo gender={item.gender} skinColor={item.skin_color} height={item.height} hair={item.hair_color} />\n            }\n        </ListItemStyled>\n    )\n}\n","import { createContext } from \"react\";\nexport const ListContext = createContext();\n","import React, {useContext} from 'react'\nimport ListItem from './ListItem'\nimport { ListContext } from \"../contexts/ListContext\";\nimport styled from \"styled-components\";\n\nconst ListStyled = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 2rem; \n`;\n\nexport default function List() {\n\n    const { searchList } = useContext(ListContext);\n\n    return (\n        <ListStyled>\n            {searchList.map((item, index)=>{\n                return <ListItem key={index} item={item} />;\n            })}\n        </ListStyled>\n    ) \n}\n","import React, { useContext } from \"react\";\nimport { ListContext } from \"../contexts/ListContext\";\nimport styled from \"styled-components\";\n\nconst FormStyled = styled.form`\ninput {\n    width: 100%;\n    height: 3rem;\n    opacity: 0.3;\n    border-radius: 0.3rem;\n    padding: 0.5rem;\n    &:hover {\n      opacity: 0.7;\n    }\n    &:focus {\n      opacity: 0.7;\n      outline: none;\n    }\n`;\n\nexport default function SearchForm() {\n  const { list, searchInput, setSearchInput, setSearchList } = useContext(\n    ListContext\n  );\n\n  const handleOnChange = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    filterList(searchInput);\n    setSearchInput(\"\");\n  };\n\n  function filterList(searchString) {\n    const filteredList = list.filter((item) =>\n      item.name.includes(searchString)\n    );\n    setSearchList(filteredList);\n  }\n\n  return (\n    <FormStyled onSubmit={handleOnSubmit}>\n      <input\n        value={searchInput}\n        placeholder=\"search\"\n        name=\"search\"\n        onChange={handleOnChange}\n      />\n    </FormStyled>\n  );\n}\n","import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport styled from \"styled-components\";\n\nconst HeaderStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem 2rem;\n  background-color: #fff;\n  color: #583c98;\n  position: sticky;\n  top: 0;\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nexport default function Header() {\n  return (\n    <HeaderStyled className=\"shadow-sm\">\n      <div>\n        <h1><a href=\"/star-wars-app\">Star wars characters</a></h1>\n      </div>\n      <div>\n        <SearchForm />\n      </div>\n    </HeaderStyled>\n  );\n}\n","import React from 'react'\n\nexport default function ErrorMessage() {\n\n    return (\n        <div className=\"m-5 text-center\">\n            <h1>Something went wrong. <br/> Refresh the page or try again later. </h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function LoadingMessage() {\n    return (\n        <div className=\"m-5 text-center\">\n            <h1>Loading... </h1>\n        </div>\n    )\n}\n","import React, { useContext } from \"react\";\nimport List from \"../components/List\";\nimport Header from \"../components/Header\";\nimport { ListContext } from \"../contexts/ListContext\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport LoadingMessage from \"../components/LoadingMessage\";\n\nexport default function SwapiPage() {\n  const { searchList, isError } = useContext(ListContext);\n\n  return (\n    <>\n      <Header />\n      {isError ? (\n        <ErrorMessage />\n      ) : (\n        <div className=\"container\">\n          {searchList ? <List /> : <LoadingMessage />}\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SwapiPage from \"./pages/SwapiPage\";\nimport { ListContext } from \"./contexts/ListContext\";\n\nfunction App() {\n  const [list, setList] = useState(null);\n  const [searchList, setSearchList] = useState(null);\n  const [searchInput, setSearchInput] = useState(\"\"); // byt namn searchInput\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getCharacters();\n  }, []);\n\n  const getCharacters = async () => {\n    let characters = [];\n    let page = 1;\n    let next = null;\n    do {\n      try {\n        let url = `https://swapi.dev/api/people/?page=${page}`;\n        await fetch(url)\n          .then((response) => response.json())\n          .then((data) => {\n            next = data.next;\n            data.results.forEach((item) => {\n              characters.push(item);\n            });\n          });\n        page++;\n      } catch (error) {\n        setIsError(true);\n      }\n    } while (next !== null);\n    setList(characters);\n    setSearchList(characters);\n  };\n\n  const ListContextValue = {\n    list,\n    setList,\n    searchList,\n    setSearchList,\n    searchInput,\n    setSearchInput,\n    isError,\n  };\n  return (\n    <div>\n      <ListContext.Provider value={ListContextValue}>\n        <SwapiPage />\n      </ListContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}